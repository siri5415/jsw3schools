Basic String Methods:
~~~~~~~~~~~~~~~~~~~~~~~~
Javascript strings are primitive and immutable: All string methods produces a new string without altering the original string.

String length
String charAt()
String charCodeAt()
String at()
String [ ]
String slice()
String substring()
String substr()

See Also:
~~~~~~~~~
String Search Methods
String Templates
String toUpperCase()
String toLowerCase()
String concat()
String trim()
String trimStart()
String trimEnd()
String padStart()
String padEnd()
String repeat()
String replace()
String replaceAll()
String split()

JavaScript String Length:
~~~~~~~~~~~~~~~~~~~~~~~~~
The length property returns the length of a string:

Extracting String Characters:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
There are 4 methods for extracting string characters:

The at(position) Method
The charAt(position) Method
The charCodeAt(position) Method
Using property access [] like in arrays

JavaScript String charAt():
~~~~~~~~~~~~~~~~~~~~~~~~~~
The charAt() method returns the character at a specified index (position) in a string:

The at() method returns the character at a specified index (position) in a string.

The at() method is supported in all modern browsers since March 2022:

Note:
~~~~
The at() method is a new addition to JavaScript.

It allows the use of negative indexes while charAt() do not.

Now you can use myString.at(-2) instead of charAt(myString.length-2).


Note:
~~~~~
Property access might be a little unpredictable:

It makes strings look like arrays (but they are not)
If no character is found, [ ] returns undefined, while charAt() returns an empty string.
It is read only. str[0] = "A" gives no error (but does not work!)

Extracting String Parts:
~~~~~~~~~~~~~~~~~~~~~~~
There are 3 methods for extracting a part of a string:

slice(start, end)
substring(start, end)
substr(start, length)

JavaScript String slice():
~~~~~~~~~~~~~~~~~~~~~~~~~
slice() extracts a part of a string and returns the extracted part in a new string.

The method takes 2 parameters: start position, and end position (end not included).


Note:
~~~~
JavaScript counts positions from zero.

First position is 0.

Second position is 1.

JavaScript String substring():
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

substring() is similar to slice().

The difference is that start and end values less than 0 are treated as 0 in substring().

If you omit the second parameter, substring() will slice out the rest of the string.

Converting to Upper and Lower Case:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
A string is converted to upper case with toUpperCase():

A string is converted to lower case with toLowerCase():

JavaScript String concat():
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
concat() joins two or more strings:

The concat() method can be used instead of the plus operator.

Note:
~~~~
All string methods return a new string. They don't modify the original string.

Formally said:

Strings are immutable: Strings cannot be changed, only replaced.

JavaScript String trim():
~~~~~~~~~~~~~~~~~~~~~~~~~
The trim() method removes whitespace from both sides of a string:

JavaScript String trimStart():
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The trimStart() method works like trim(), but removes whitespace only from the start of a string.



