Why Use Arrays?
~~~~~~~~~~~~~~~
An array can hold many values under a single name, and you can access the values by referring to an index number.


Creating an Array:
~~~~~~~~~~~~~~~~~~~~
Using an array literal is the easiest way to create a JavaScript Array.

Syntax:

const array_name = [item1, item2, ...];      
It is a common practice to declare arrays with the const keyword.

Note: 
~~~~~
Array indexes start with 0.

[0] is the first element. [1] is the second element.

Changing an Array Element:
~~~~~~~~~~~~~~~~~~~~~~~~~~
This statement changes the value of the first element in cars:



Arrays are Objects:
~~~~~~~~~~~~~~~~~~
Arrays are a special type of objects. The typeof operator in JavaScript returns "object" for arrays.

But, JavaScript arrays are best described as arrays.

Arrays use numbers to access its "elements". In this example, person[0] returns John:


Array Elements Can Be Objects:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
JavaScript variables can be objects. Arrays are special kinds of objects.

Because of this, you can have variables of different types in the same Array.

You can have objects in an Array. You can have functions in an Array. You can have arrays in an Array:

Array methods are covered in the next chapters.

The length Property :
~~~~~~~~~~~~~~~~~~~~~
The length property of an array returns the length of an array (the number of array elements).

The length property is always one more than the highest array index.

Accessing the First Array Element
