JavaScript Strings:
~~~~~~~~~~~~~~~~~~~~
Strings are for storing text

Strings are written with quotes

Using Quotes:
~~~~~~~~~~~~
A JavaScript string is zero or more characters written inside quotes.

let text = "John Doe";


Note:
~~~~~
Strings created with single or double quotes works the same.

There is no difference between the two.

Quotes Inside Quotes:
~~~~~~~~~~~~~~~~~~~~~
You can use quotes inside a string, as long as they don't match the quotes surrounding the string:

Template Strings:
~~~~~~~~~~~~~~~~~
Templates were introduced with ES6 (JavaScript 2016).

Templates are strings enclosed in backticks (`This is a template string`).

Templates are not supported in Internet Explorer.

String Length:
~~~~~~~~~~~~~
To find the length of a string, use the built-in length property:

Escape Characters:
~~~~~~~~~~~~~~~~~
Because strings must be written within quotes, JavaScript will misunderstand this string:

let text = "We are the so-called "Vikings" from the north.";
The string will be chopped to "We are the so-called ".

To solve this problem, you can use an backslash escape character.

The backslash escape character (\) turns special characters into string characters:

Code	Result	Description
\'	'	Single quote
\"	"	Double quote
\\	\	Backslash



Six other escape sequences are valid in JavaScript:

Code	Result
\b	   Backspace
\f	   Form Feed
\n	   New Line
\r	   Carriage Return
\t	   Horizontal Tabulator
\v	   Vertical Tabulator

Note:
~~~~~
The 6 escape characters above were originally designed to control typewriters, teletypes, and fax machines. They do not make any sense in HTML.

Breaking Long Lines:
~~~~~~~~~~~~~~~~~~~~~
For readability, programmers often like to avoid long code lines.

A safe way to break up a statement is after an operator:


JavaScript Strings as Objects:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Normally, JavaScript strings are primitive values, created from literals:

let x = "John";

But strings can also be defined as objects with the keyword new:

let y = new String("John");


Do not create Strings objects.

The new keyword complicates the code and slows down execution speed.

String objects can produce unexpected results:

Note the difference between (x==y) and (x===y).

